<!DOCTYPE html>
<html>
<head>
  <title>Tienda de Productos</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""/>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
    }

    .header {
      background-color: #333;
      padding: 20px;
      color: #fff;
      text-align: center;
      display: flex;
      justify-content: space-between;
    }

    .container {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap ;
      max-width: 70%;
      margin: 0 auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
      border: 2px solid black;
      margin-top: 20px;
    }

    h1 {
      margin-top: 0;
      font-size: 32px;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    #map { 
      height: 450px; 
      width: 450px; 
    }

    .containerMap{
      display: flex;
      justify-content: center;
    }

    .listaCarrito{
      display: flex;
      justify-content: space-between;
      border: 1px solid #00000038;
      height: 135px;
      border-radius: 17px;
      align-items: center;
      padding: 10px;
      margin-bottom: 10px;
      box-shadow: 6px 4px 13px 0px gray;
    }

    .listaCarrito img {
      width: 90px;
      border-radius: 10px;
    }

    .listaCarrito p {
      margin-top: 18px;
    }

    .eliminar-producto{
      cursor: pointer;
    }

    .offcanvas-body {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      padding: 0 !important;
    }

    .offcanvas-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: black;
      height: 70px;
      padding: 20px;
      color: #f4f4f4;
    }

    .cantidad-carrito {
      background-color: red;
      color: white;
      border-radius: 30%;
      font-size: 12px;
      padding: 4px;
      right: 30px;
      position: absolute;
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 5px;
    }

    input[type="text"],
    input[type="email"],
    input[type="password"],
    select {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 3px;
      font-size: 16px;
    }

    .botonR {
      display: block;
      width: 100%;
      padding: 10px;
      background-color: #4caf50;
      border: none;
      color: #fff;
      text-align: center;
      font-size: 16px;
      border-radius: 3px;
      cursor: pointer;
      margin-bottom: 5px;
      text-decoration: none;
    }

    button,.boton:hover {
      background-color: #45a049;
    }

    .botonR:hover{
      color: #fff;
    }
  </style>

</head>
<body>
  <div class="header">
    <div>

      <a class="btn btn-primary" role="button" href="/productosvista">Agregar productos</a>

    </div>
    <h1>Lista Usuarios</h1> 

    <div>
      <a class="btn btn-primary" role="button" href="/profile">Perfil</a>
      <a class="btn btn-primary" role="button" href="/listUser">Usuarios</a>
      <button class="btn btn-primary" type="button" onclick="mostrarCarrito()" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">
        Carrito<i class="bi bi-cart-plus-fill"></i>
      </button>

    </div>

  </div>

  <div class="container" style="border: 2px solid black;">

    <table class="table table-hover">
      <thead class="table-dark">
        <tr>
          <th scope="col">Nombre</th>
          <th scope="col">Correo</th>
          <th scope="col">Rol</th>
          <th scope="col">Acciones</th>
        </tr>
      </thead>
      <tbody>

        <% userList.forEach(function(usr) { %>
          <tr>
            <td><%=usr.nombre%></td>
            <td><%=usr.correo%></td>
            <td><%=usr.rol%></td>
            <td>
              <a class="btn btn-outline-danger" role="button" href="/borrarUser/<%=usr._id%>">Eliminar</a>
              <a class="btn btn-outline-info" role="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" onclick="rellenar(userList)">Editar</a>
            </td>
          </tr>
        <% }); %>

      </tbody>
    </table>

  </div>


  <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
    <div class="offcanvas-header">
      <h5 id="offcanvasRightLabel">Carrito de compra</h5>
      <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
  <div class="offcanvas-body">
    <div id="container-carrito">
    </div>
    <div class="offcanvas-footer">
      <button type="button" class="btn btn-success">Comprar</button>
      <span class="total">Total: 50000</span>
    </div>
  </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Editar informacion</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form action="recuperarUsuario" method="post">
          <div class="form-group">  
            <label for="username">Nombre de usuario: <%= userList %> </label>
            <input type="text" name="nombre" value="<%= userList.nombre%>" required>
          </div>
          <div class="form-group">
            <label for="username">Correo: </label>
            <input type="email" name="correo" required>
          </div>
          <div class="form-group">
            <label for="username">Telefono:</label>
            <input type="text" name="telefono">
          </div>
          <div class="form-group">
            <label for="rol">Rol:</label>
            <select name="rol" id="rol">
              <option>Vendedor</option>
              <option>Administrador</option>
              <option>Comprador</option>
            </select>
          </div>
          <span>Ubicacion</span>
          <div class="form-group">
            <input type="text" name="centro" required>
          </div>
          <div class="form-group">
            <input type="text" name="zoom" required>
          </div>
          <div class="form-group">
            <label for="password">Contrase√±a:</label>
            <input type="password" name="contrasena" required>
          </div>
          <button class="botonR" type="submit">Recuperar</button>

        </form>
      </div>
    </div>
  </div>
</div>
<script>

  var carrito = JSON.parse(localStorage.getItem("carrito")) || [];

  const rellenar = (objeto) => {
    console.log(objeto, 'olqeirabhguidbguidwbbjjndfjkkdfffdfj')
    const userEdit = objeto
  }

  function agregarCarrito(id,name,pricePro,image) {
    let productoagregado ={
      "id":id,
      "nombre":name,
      "precio":pricePro,
      "Image":image,
      "cantidad": 0
    }
    //function logica que guarde los objetos
    //El boton  Carrito debe llamar una funcion que:
    //1. leer si hay una cookie..analizar si hay objetos repetidos entre la coockie y el array.
    //2. pintar el offcanvas con los objetos encontrados en el carrito
    let counter = 0;
    let carritoF = carrito.filter(element => element.id === id)
    if (carritoF.length > 0) {
      console.log(carritoF)
      carritoF[0].cantidad = carritoF[0].cantidad + 1;
      mostrarCarrito();
    } else {
      carrito.push(productoagregado);
    }

    saveLocal()
    mostrarCarrito();
  }
  
  const mostrarCarrito = () => {
    const container = document.getElementById('container-carrito');

    container.innerHTML ="";
    //cardlist.innerHTML= "";console
    carrito.forEach(element => {
      const idPro = document.getElementById('idProdu')

      const cardlist = document.createElement('div');
      cardlist.setAttribute('class','listaCarrito')

      const imagen = document.createElement('img')
      const nombrePro = document.createElement('p')
      const price = document.createElement('p')
      const doc = document.createElement('p')
      const eliminar = document.createElement('span');
      const cantidad = document.createElement('span');
      cantidad.setAttribute('class','cantidad-carrito');

      // cardlist.appendChild(doc)
      cardlist.appendChild(imagen)
      cardlist.appendChild(nombrePro)
      cardlist.appendChild(price)
      cardlist.appendChild(eliminar)  
      cardlist.appendChild(cantidad)  

      eliminar.innerText = 'x'
      eliminar.className = 'eliminar-producto'
      // doc.textContent = id;
      imagen.src = 'https://source.unsplash.com/300x400/?nombre';
      nombrePro.textContent = element.nombre;
      price.textContent = element.precio;
      cantidad.textContent = element.cantidad
      eliminar.addEventListener("click" , () => {
        eliminarPro(element.id);
      })


      container.appendChild(cardlist)
    });
  }

  const eliminarPro = (id) => {
    carrito = carrito.filter((element) => element.id !== id)
    saveLocal();
    mostrarCarrito();
  }

  const saveLocal = () => {
    localStorage.setItem("carrito", JSON.stringify(carrito));
  };

  const carritoCounter = () => {
    cantidadCarrito.style.display = "block";

    const carritoLength = carrito.length;

    localStorage.setItem("carritoLength", JSON.stringify(carritoLength));

    cantidadCarrito.innerText = JSON.parse(localStorage.getItem("carritoLength"));
  };
</script>
</body>
</html>
